#!/usr/bin/env bash

function silently {
  set +x; "$@"; set -x
}

function require {
  silently source script/profile
  silently require
}

function setup_kit {
  local git_block="$1"; shift
  local nm_block="${1:-"${git_block##*/}"}"

  if [[ ! -d "$BLOCK_PATH/$nm_block" ]]; then
    git clone "$git_block" "$BLOCK_PATH/$nm_block" || true
  else
    pushd "$BLOCK_PATH/$nm_block" >/dev/null
    git pull
    popd >/dev/null
  fi

  pushd "$BLOCK_PATH/$nm_block"
  make
  silently require
  popd
}

function setup_home {
  # clone home
  if [[ ! -d .git ]]; then
    git clone "$url_repo" home
    mv home/.git . || rm -rf home/.git
    git clean -fd
    known_git_hosts
  fi

  git fetch
  git reset --hard origin/master
  
  make
  silently require
}

function setup_cibuild {
  if [[ "$#" == 0 ]]; then
    if [[ ! -d ".git" ]]; then
      echo "ERROR: specify a git repository to build" 1>&2
      return 1
    fi
  else
    url_repo="$1"; shift
  fi

  : ${BLOCK_PATH:="$(pwd)/work"} # TODO remove hardcoded work
  export BLOCK_PATH

  export BASEBOX_CACHE="/vagrant"

  if [[ -n "${1:-}" ]]; then
    export http_proxy="$1"; shift
    export https_proxy="$http_proxy"
    export ftp_proxy="$http_proxy"
  else
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway="$1"; shift
  else
    unset ssh_gateway
    unset GIT_SSH
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway_user="$1"; shift
  else
    unset ssh_gateway_user
  fi

  configure_apt_proxy

  known_git_hosts
}

function known_git_hosts {
  (
    ssh-keyscan -t rsa github.com &
    ssh-keyscan -t rsa bitbucket.org &
    ${ssh_gateway:+ssh-keyscan -t rsa "$ssh_gateway"} &
  ) >> ~/.ssh/known_hosts
}

function configure_apt_proxy {
  case "$(uname -s)" in
    Linux)
      {
        echo "Acquire::Languages { \"en\"; };"
        echo "Acquire::http { Pipeline-Depth \"200\"; }"
      } | sudo tee /etc/apt/apt.conf.d/99boxcache

      if [[ -n "${http_proxy:-}" ]]; then
        {
          echo "Acquire::http::Proxy \"$http_proxy\";"
        } | sudo tee -a /etc/apt/apt.conf.d/99boxcache
      fi

      sudo aptitude update
      ;;
  esac
}

function cleanup_cibuild {
  case "$(uname -s)" in
    Linux)
      sudo rm -f /etc/apt/apt.conf.d/99boxcache
      ;;
  esac

  touch .done
}


function main {
  setup_cibuild "$@"

  setup_kit git@github.com:defn/block
  setup_kit git@github.com:defn/cache
  setup_home

  cleanup_cibuild
}

trap 'if [[ ! -f .done ]]; then echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX[ NOT DONE ]XXXXXXXXXXXXXXXXXXXXXXXXX"; fi; rm -f .done' EXIT
set -exfu
exec 2>&1
cd
main "$@"
