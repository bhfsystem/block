#!/usr/bin/env bash

function silently {
  set +x; "$@"; set -x
}

function git_stuff {
  # initialize new ssh hosts
  rm -f ~/.ssh/known_hosts
  ssh -oStrictHostKeyChecking=no github.com true 2>/dev/null &
  ssh -oStrictHostKeyChecking=no bitbucket.org true 2>/dev/null &
  ssh -oStrictHostKeyChecking=no localhost true 2>/dev/null &
  wait
}

function bootstrap_block {
  if [[ -f "Blockfile.lock" ]]; then
    block lock sync
  else
    block clone
    block runmany 8 'cd $1 && git pull' || true
  fi
  block bootstrap
  silently require
}

function home_stuff {
  # clone home
  if [[ ! -d .git ]]; then
    git clone "$url_repo" home
    mv home/.git . || rm -rf home/.git
    git reset --hard
    git clean -fd
  else
    cat .ssh/authorized_keys 2>/dev/null || true
    git reset --hard
  fi
  
  git pull
  silently source script/ciprofile
  bootstrap_block
}

function block_stuff {
  # bootstrap block
  if [[ ! -d "$BLOCK_PATH/block" ]]; then
    git clone git@github.com:defn/block "$BLOCK_PATH/block" || true
  else
    pushd "$BLOCK_PATH/block" >/dev/null
    git pull
    popd >/dev/null
  fi

  pushd "$BLOCK_PATH/block"
  silently source script/profile
  silently require
  bootstrap_block
  popd
}

function cache_stuff {
  # bootstrap cache
  git clone git@github.com:defn/cache "$BLOCK_PATH/cache" || true
  pushd "$BLOCK_PATH/cache"
  silently require
  bootstrap_block
  popd

  export BASEBOX_CACHE="/vagrant"

  case "$(uname -s)" in
    Linux)
      {
        echo "Acquire::Languages { \"en\"; };"
        echo "Acquire::http { Pipeline-Depth \"200\"; }"
      } | sudo tee /etc/apt/apt.conf.d/99boxcache

      if [[ -n "${http_proxy:-}" ]]; then
        {
          echo "Acquire::http::Proxy \"$http_proxy\";"
        } | sudo tee -a /etc/apt/apt.conf.d/99boxcache
      fi

      sudo aptitude update
      ;;
  esac
}

function update_stuff {
  case "$(uname -s)" in
    Linux)
      sudo aptitude upgrade -y || true
      ;;
    Darwin)
      sudo softwareupdate -i -v -a || true
      ;;
  esac

  facts cache
}

function clean_stuff {
  case "$(uname -s)" in
    Linux)
      sudo rm -f /etc/apt/apt.conf.d/99boxcache
      ;;
  esac

  touch ~/.done
}

function setup_stuff {
  if [[ "$#" == 0 ]]; then
    if [[ ! -d ".git" ]]; then
      echo "ERROR: specify a git repository to build" 1>&2
      return 1
    fi
  else
    url_repo="$1"; shift
  fi

  if [[ -n "${1:-}" ]]; then
    export http_proxy="$1"; shift
    export https_proxy="$http_proxy"
    export ftp_proxy="$http_proxy"
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway="$1"; shift
    ssh -oStrictHostKeyChecking=no "$ssh_gateway" true 2>/dev/null || true
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway_user="$1"; shift
  fi

  ssh-add -l
  echo "ssh gateway: ${ssh_gateway:-}"
  echo "ssh gateway user: ${ssh_gateway_user:-}"
  echo "GIT_SSH: ${GIT_SSH:-}"
}

function main {
  # setup
  setup_stuff "$@"

  # setup
  git_stuff
  block_stuff
  cache_stuff
  home_stuff
  update_stuff

  # cleanup
  clean_stuff
}

trap 'if [[ ! -f ~/.done ]]; then echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX[ NOT DONE ]XXXXXXXXXXXXXXXXXXXXXXXXX"; fi; rm -f ~/.done' EXIT
set -exfu
exec 2>&1
cd
main "$@"
