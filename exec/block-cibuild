#!/usr/bin/env bash

function silently {
  set +x; "$@"; set -x
}

function setup_home {
  # clone home
  if [[ -d .git ]]; then
    git fetch
  else
    git clone "$url_repo" home
    mv home/.git . || rm -rf home/.git
  fi

  git reset --hard origin/master
  git clean -fd --exclude='cibuild-*.log'
  
  make
}

function setup_cibuild {
  if [[ "$#" == 0 ]]; then
    if [[ ! -d ".git" ]]; then
      echo "ERROR: specify a git repository to build" 1>&2
      return 1
    fi
  else
    url_repo="$1"; shift
  fi

  : ${BLOCK_PATH:="$(pwd)/work"} # TODO remove hardcoded work
  export BLOCK_PATH

  export BASEBOX_CACHE="/vagrant" # TODO get rid of this, and use something like defn-config

  if [[ -n "${1:-}" ]]; then
    export http_proxy="$1"; shift
    export https_proxy="$http_proxy"
    export ftp_proxy="$http_proxy"
  else
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway="$1"; shift
  else
    unset ssh_gateway
    unset GIT_SSH
  fi

  if [[ -n "${1:-}" ]]; then
    export ssh_gateway_user="$1"; shift
  else
    unset ssh_gateway_user
  fi

  configure_apt_proxy

  known_git_hosts
}

function known_git_hosts {
  mkdir -p ~/.ssh
  (
    ssh-keyscan -t rsa github.com &
    ssh-keyscan -t rsa bitbucket.org &
    ${ssh_gateway:+ssh-keyscan -t rsa "$ssh_gateway"} &
    wait
  ) >> ~/.ssh/known_hosts
}

function configure_apt_proxy {
  case "$(uname -s)" in
    Linux)
      {
        echo "Acquire::Languages { \"en\"; };"
        echo "Acquire::http { Pipeline-Depth \"200\"; }"
      } | sudo tee /etc/apt/apt.conf.d/99boxcache

      if [[ -n "${http_proxy:-}" ]]; then
        {
          echo "Acquire::http::Proxy \"$http_proxy\";"
        } | sudo tee -a /etc/apt/apt.conf.d/99boxcache
      fi

      sudo aptitude update >/dev/null
      ;;
  esac
}

function cleanup_cibuild {
  case "$(uname -s)" in
    Linux)
      sudo rm -f /etc/apt/apt.conf.d/99boxcache
      ;;
  esac

  touch .done
}


function main {
  setup_cibuild "$@"

  setup_home

  cleanup_cibuild
}

trap 'if [[ ! -f .done ]]; then echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX[ NOT DONE ]XXXXXXXXXXXXXXXXXXXXXXXXX"; fi; rm -f .done' EXIT
set -exfu
exec 2>&1
cd
main "$@" 2>&1 | tee cibuild-$(date +%s).log
