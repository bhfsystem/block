#!/usr/bin/env python

import json
import re
import subprocess
import os
import itertools

def git_defaults(ele):
    m = re.search('^(\w+)/', ele)
    if m:
        return "git@github.com:%s" % (ele)
    else:
        return "git@github.com:defn/%s" % (ele)

def flattern(A):
    for i in A:
        if isinstance(i,list): 
            for ii in flattern(i):
                yield ii
        else: yield i

def list_block(block, seen = { }):
    try:
        os.chdir(block['path'])
    except OSError:
        seen[block['name']] = True
        yield block
        return

    if os.path.isfile('.block-name'):
        with open('.block-name') as f:
            block['name'] = f.read().strip()

    if block['name'] in seen:
        return

    try:
        with open('Blockfile.json') as f:
            block['body'] = json.load(f)
    except IOError:
        block['body'] = { "require": [] }
        
    seen[block['name']] = True

    for b in flattern(block['body'].get('require', [])):
        for r in list_block({ 
            'name': b,
            'git': git_defaults(b),
            'path': "%s/%s" % (os.environ['BLOCK_PATH'], os.path.basename(b))
            }):
            yield r

    yield block

def main():
    for b in list_block({
        'name': os.path.dirname(os.getcwd()), 
        'git': subprocess.check_output(['git', 'ls-remote', '--get-url']).strip(),
        'path': os.getcwd(),
        'end': '.'
        }):
        print("%s %s %s %s" % (b['name'], b['path'], b['git'], b.get('end','')))

main()
