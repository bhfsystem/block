#!/usr/bin/env bash

# Opens a web browser for block documentation

# ## Usage
function suggested {
  # opens `docs/index.html` in the current directory
  block open

  # opens `$BLOCK_PATH/doge-block/docs/index.html`
  block open doge-block
}

# ## Main
function main {
  local shome="${_block_home:-"$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"}"
  source "$shome/script/profile" ''

  # If no locations on the command-line, default to the current directory
  if [[ -z "${1:-}" ]]; then
    set -- .
  fi

  # Keep track of locations without documentation
  local not_found=

  local pth_block
  # ### For each block or path:
  for pth_block in "$@"; do
    # Find documentation and then continue the loop
    case "$pth_block" in
      # If path starts with `/` or `.`, check for `docs/index.html` directly
      .*|/*)
        if [[ -f "$pth_block/docs/index.html" ]]; then
          open "$pth_block/docs/index.html"
          continue
        fi
        ;;
      # Otherwise, qualify with `$BLOCK_PATH`
      *)
        if [[ -f "$BLOCK_PATH/$pth_block/docs/index.html" ]]; then
          open "$BLOCK_PATH/$pth_block/docs/index.html"
          continue
        fi
        ;;
    esac

    # Record that documentation was not found for this location
    not_found="$not_found $pth_block"
  done
  # ### Finished processing locations

  # Display which locations didn't have documentation
  if [[ -n "$not_found" ]]; then
    echo "ERROR: couldn't find a docs/index.html in: $@" 1>&2
    return 1
  fi
}

source sub "$0" "$@"
