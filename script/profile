#!/usr/bin/env bash

function debug {
  if [[ -n "${DEBUG:-}" ]]; then
    if "$@"; then
      true
    fi
  fi
}

function sub_profile {
  source "$shome/vendor/sub/script/profile"
}

function profile {
  local shome="$(cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"
  PATH="$shome/bin:$shome/exec:$PATH"

  source app_require
  source app_bootstrap
  source app_list

  local cmd_sub="$(type -P sub || true 2>&-)"
  if [[ ! -x "$cmd_sub" ]]; then
    if [[ -r "$shome/vendor/sub/script/profile" ]]; then
      sub_profile
    fi
  fi
}

function get_requires {
  if [[ -f Blockfile.json ]]; then
    if [[ -f Blockfile.txt && Blockfile.txt -nt Blockfile.json ]]; then
      true
    else
      if [[ -f Blockfile.json ]]; then
        cat Blockfile.json | jq -r '[.require[] | [.] | flatten] | flatten[]'
      else
        echo -n > Blockfile.txt
      fi > Blockfile.txt
    fi
    cat Blockfile.txt
  fi
}

function into_blockfile {
  local nm_action="$1"; shift

  local nm_block
  for nm_block in $(get_requires); do
    if ! block_walker "$nm_action" "$nm_block"; then
      return $?
    fi
  done

  return 0
}

function block_walker {
  local nm_action="$1"; shift

  local fl_error=0

  if [[ "$#" == 0 ]]; then
    "${nm_action}_in" "."
    return $fl_error
  fi

  local nm_project
  for nm_project in "$@"; do
    local fl_found=0

    local pth_ap
    for pth_app in / ./ $APP_PATH; do
      if [[ -d "$pth_app/$nm_project" ]]; then
        "${nm_action}_in" "$pth_app/$nm_project"
        fl_found=1
        break
      fi
    done

    if [[ "$fl_found" == 0 ]]; then
      echo ERROR: "$nm_project" not found 1>&2
    fi
  done

  return $fl_error
}

profile
